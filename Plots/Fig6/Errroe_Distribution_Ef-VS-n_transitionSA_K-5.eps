%!PS-Adobe-2.0 EPSF-2.0
%%Title: Errroe_Distribution_Ef-VS-n_transitionSA_K-5.eps
%%Creator: gnuplot 5.4 patchlevel 2
%%CreationDate: Thu May  8 15:51:06 2025
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 2.5 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.2 (Dec 2017)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto closepath gsave fill grestore stroke} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/Metrics {ExtendTextBox Gswidth} def
/Lwidth {currentpoint stroke M 0 vshift R Metrics} def
/Rwidth {currentpoint stroke M dup stringwidth pop neg vshift R Metrics} def
/Cwidth {currentpoint stroke M dup stringwidth pop -2 div vshift R Metrics} def
/GLwidth {currentpoint stroke M 0 vshift R {ExtendTextBox} forall} def
/GRwidth {currentpoint stroke M dup Gwidth vshift R {ExtendTextBox} forall} def
/GCwidth {currentpoint stroke M dup Gwidth 2 div vshift R {ExtendTextBox} forall} def
/GLwidth2 {0 Gwidth AddGlyphWidth} def
/GRwidth2 {Gwidth -1 mul 0 AddGlyphWidth} def
/GCwidth2 {Gwidth 2 div dup -1 mul AddGlyphWidth} def
/AddGlyphWidth { dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
                 dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse } def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {Metrics pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get Gswidth pop -2 div
     dup 0 R} {dup 6 get Gswidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (Errroe_Distribution_Ef-VS-n_transitionSA_K-5.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.4 patchlevel 2)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu May  8 15:51:06 2025)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt Sep 2016
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { dup type /stringtype eq
    { Boxing { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if }
    {} ifelse} def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PL PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
924 778 M
31 0 V
5992 0 R
-31 0 V
924 1153 M
31 0 V
5992 0 R
-31 0 V
924 1459 M
31 0 V
5992 0 R
-31 0 V
924 1718 M
31 0 V
5992 0 R
-31 0 V
924 1942 M
31 0 V
5992 0 R
-31 0 V
924 2139 M
31 0 V
5992 0 R
-31 0 V
924 2316 M
63 0 V
5960 0 R
-63 0 V
stroke
840 2316 M
[ [(Helvetica) 220.0 0.0 true true 0 (10)]
[(Helvetica) 176.0 110.0 true true 0 (-1)]
] -95.3 MRshow
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
1.000 UL
LTb
LCb setrgbcolor
924 3480 M
31 0 V
5992 0 R
-31 0 V
924 4160 M
31 0 V
5992 0 R
-31 0 V
924 4643 M
31 0 V
5992 0 R
-31 0 V
924 448 M
0 31 V
0 4280 R
0 -31 V
1027 448 M
0 31 V
0 4280 R
0 -31 V
1117 448 M
0 31 V
0 4280 R
0 -31 V
1198 448 M
0 63 V
0 4248 R
0 -63 V
stroke
1198 308 M
[ [(Helvetica) 220.0 0.0 true true 0 (10)]
[(Helvetica) 176.0 110.0 true true 0 (2)]
] -95.3 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1731 448 M
0 31 V
0 4280 R
0 -31 V
2043 448 M
0 31 V
0 4280 R
0 -31 V
2264 448 M
0 31 V
0 4280 R
0 -31 V
2436 448 M
0 31 V
0 4280 R
0 -31 V
2576 448 M
0 31 V
0 4280 R
0 -31 V
2694 448 M
0 31 V
0 4280 R
0 -31 V
2797 448 M
0 31 V
0 4280 R
0 -31 V
2887 448 M
0 31 V
0 4280 R
0 -31 V
2968 448 M
0 63 V
0 4248 R
0 -63 V
stroke
2968 308 M
[ [(Helvetica) 220.0 0.0 true true 0 (10)]
[(Helvetica) 176.0 110.0 true true 0 (3)]
] -95.3 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
3501 448 M
0 31 V
0 4280 R
0 -31 V
3813 448 M
0 31 V
0 4280 R
0 -31 V
4034 448 M
0 31 V
0 4280 R
0 -31 V
4206 448 M
0 31 V
0 4280 R
0 -31 V
4346 448 M
0 31 V
0 4280 R
0 -31 V
4465 448 M
0 31 V
0 4280 R
0 -31 V
4567 448 M
0 31 V
0 4280 R
0 -31 V
4658 448 M
0 31 V
0 4280 R
0 -31 V
4739 448 M
0 63 V
0 4248 R
0 -63 V
stroke
4739 308 M
[ [(Helvetica) 220.0 0.0 true true 0 (10)]
[(Helvetica) 176.0 110.0 true true 0 (4)]
] -95.3 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
5272 448 M
0 31 V
0 4280 R
0 -31 V
5583 448 M
0 31 V
0 4280 R
0 -31 V
5805 448 M
0 31 V
0 4280 R
0 -31 V
5976 448 M
0 31 V
0 4280 R
0 -31 V
6116 448 M
0 31 V
0 4280 R
0 -31 V
6235 448 M
0 31 V
0 4280 R
0 -31 V
6337 448 M
0 31 V
0 4280 R
0 -31 V
6428 448 M
0 31 V
0 4280 R
0 -31 V
6509 448 M
0 63 V
0 4248 R
0 -63 V
stroke
6509 308 M
[ [(Helvetica) 220.0 0.0 true true 0 (10)]
[(Helvetica) 176.0 110.0 true true 0 (5)]
] -95.3 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
924 4759 N
924 448 L
6023 0 V
0 4311 V
-6023 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
371 2603 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 260.0 0.0 true true 0 (u)]
[(Helvetica) 208.0 -78.0 true true 0 (f)]
] -60.7 MCshow
grestore
/Helvetica findfont 140 scalefont setfont
LTb
LCb setrgbcolor
3935 98 M
[ [(Helvetica) 260.0 0.0 true true 0 (n)]
] -86.7 MCshow
/Helvetica findfont 140 scalefont setfont
LTb
% Begin plot #1
1.000 UL
LTb
LCa setrgbcolor
LCb setrgbcolor
6296 4556 M
[ [(Helvetica) 260.0 0.0 true true 0 (N)]
[(Helvetica) 260.0 0.0 true true 0 (=100000)]
] -86.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCa setrgbcolor
0.400 6380 4521 399 70 BoxColFill
6380 4521 N
399 0 V
0 70 V
-399 0 V
0 -70 V
Z stroke
1.000 UL
LTb
LCa setrgbcolor
gsave 938 4759 N 368 -314 V 941 -711 V 940 -677 V 940 -639 V 940 -628 V 940 -601 V 940 -560 V 0 0 V -940 560 V -940 601 V -940 628 V -940 639 V -940 677 V -941 711 V -369 314 V 0.40 PolyFill
% End plot #1
% Begin plot #2
3.000 UL
LTb
LCa setrgbcolor
LCb setrgbcolor
6296 4276 M
[ [(Helvetica) 260.0 0.0 true true 0 (N)]
[(Helvetica) 260.0 0.0 true true 0 (=12500	 )]
] -86.7 MRshow
/Helvetica findfont 140 scalefont setfont
3.000 UL
LTb
LCa setrgbcolor
6380 4276 M
399 0 V
929 4759 M
2434 3612 L
3939 2571 L
5443 1627 L
6947 752 L
% End plot #2
% Begin plot #3
stroke
LTb
LT2
LCa setrgbcolor
LCb setrgbcolor
6296 3996 M
[ [(Helvetica) 260.0 0.0 true true 0 (N)]
[(Helvetica) 260.0 0.0 true true 0 (=3125	  	)]
] -86.7 MRshow
/Helvetica findfont 140 scalefont setfont
3.000 UL
LTb
LT2
LCa setrgbcolor
6380 3996 M
399 0 V
929 4759 M
2434 3612 L
3939 2571 L
5443 1627 L
6947 752 L
% End plot #3
% Begin plot #4
stroke
5.000 UL
LTb
LCa setrgbcolor
LCb setrgbcolor
6296 3716 M
[ [(Helvetica) 260.0 0.0 true true 0 (N)]
[(Helvetica) 260.0 0.0 true true 0 (=1000	  	)]
] -86.7 MRshow
/Helvetica findfont 140 scalefont setfont
5.000 UL
LTb
LCa setrgbcolor
2434 3612 Pnt
3939 2571 Pnt
5443 1627 Pnt
6947 752 Pnt
6579 3716 Pnt
% End plot #4
% Begin plot #5
1.000 UL
LTb
0.90 0.12 0.06 C
LCb setrgbcolor
6296 3436 M
[ [(Symbol) 260.0 0.0 true true 0 (a)]
[(Helvetica) 260.0 0.0 true true 0 (=19.68)]
] -86.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
0.90 0.12 0.06 C
0.400 6380 3401 399 70 BoxColFill
6380 3401 N
399 0 V
0 70 V
-399 0 V
0 -70 V
Z stroke
1.000 UL
LTb
0.90 0.12 0.06 C
gsave 938 4759 N 368 -314 V 941 -711 V 940 -677 V 940 -639 V 940 -628 V 940 -601 V 940 -560 V 0 116 V -940 519 V -940 590 V -940 618 V -940 629 V -940 663 V -941 709 V -338 286 V 0.40 PolyFill
% End plot #5
% Begin plot #6
1.000 UL
LTb
0.00 0.62 0.45 C
LCb setrgbcolor
6296 3156 M
[ [(Symbol) 260.0 0.0 true true 0 (a)]
[(Helvetica) 260.0 0.0 true true 0 (=19.36)]
] -86.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
0.00 0.62 0.45 C
0.400 6380 3121 399 70 BoxColFill
6380 3121 N
399 0 V
0 70 V
-399 0 V
0 -70 V
Z stroke
1.000 UL
LTb
0.00 0.62 0.45 C
gsave 924 4707 N 382 -345 V 941 -776 V 940 -749 V 940 -756 V 940 -742 V 940 -782 V 128 -109 V 138 0 V -266 221 V -940 756 V -940 723 V -940 731 V -940 741 V -941 771 V -382 342 V 0.40 PolyFill
% End plot #6
% Begin plot #7
3.000 UL
LTb
0.90 0.12 0.06 C
929 4759 M
2434 3612 L
3939 2571 L
5443 1627 L
6947 752 L
% End plot #7
% Begin plot #8
stroke
LTb
0.00 0.62 0.45 C
924 4694 M
2434 3441 L
3939 2281 L
5443 1091 L
6216 448 L
% End plot #8
% Begin plot #9
stroke
LTb
LT2
0.90 0.12 0.06 C
956 4759 M
2434 3633 L
3939 2640 L
5443 1724 L
6947 916 L
% End plot #9
% Begin plot #10
stroke
LTb
LT2
0.00 0.62 0.45 C
924 4699 M
2434 3483 L
3939 2295 L
5443 1158 L
6320 448 L
% End plot #10
% Begin plot #11
stroke
5.000 UL
LTb
0.90 0.12 0.06 C
1007 4735 Pnt
1082 4679 Pnt
1157 4623 Pnt
1233 4567 Pnt
1308 4512 Pnt
1383 4456 Pnt
1458 4400 Pnt
1533 4345 Pnt
1608 4289 Pnt
1684 4233 Pnt
1759 4176 Pnt
1834 4119 Pnt
1909 4062 Pnt
1984 4006 Pnt
2060 3949 Pnt
2135 3892 Pnt
2210 3835 Pnt
2285 3778 Pnt
2360 3721 Pnt
2436 3664 Pnt
2511 3613 Pnt
2586 3562 Pnt
2661 3511 Pnt
2736 3460 Pnt
2812 3409 Pnt
2887 3357 Pnt
2962 3306 Pnt
3037 3255 Pnt
3112 3204 Pnt
3187 3153 Pnt
3263 3103 Pnt
3338 3053 Pnt
3413 3004 Pnt
3488 2954 Pnt
3563 2905 Pnt
3639 2855 Pnt
3714 2806 Pnt
3789 2756 Pnt
3864 2707 Pnt
3939 2657 Pnt
4015 2612 Pnt
4090 2567 Pnt
4165 2521 Pnt
4240 2476 Pnt
4315 2431 Pnt
4391 2386 Pnt
4466 2340 Pnt
4541 2295 Pnt
4616 2250 Pnt
4691 2205 Pnt
4766 2162 Pnt
4842 2118 Pnt
4917 2075 Pnt
4992 2032 Pnt
5067 1989 Pnt
5142 1946 Pnt
5218 1903 Pnt
5293 1860 Pnt
5368 1816 Pnt
5443 1773 Pnt
5518 1735 Pnt
5594 1696 Pnt
5669 1657 Pnt
5744 1618 Pnt
5819 1580 Pnt
5894 1541 Pnt
5970 1502 Pnt
6045 1463 Pnt
6120 1425 Pnt
6195 1386 Pnt
6270 1346 Pnt
6345 1307 Pnt
6421 1267 Pnt
6496 1227 Pnt
6571 1188 Pnt
6646 1148 Pnt
6721 1109 Pnt
6797 1069 Pnt
6872 1030 Pnt
6947 990 Pnt
% End plot #11
% Begin plot #12
5.000 UL
LTb
0.00 0.62 0.45 C
932 4710 Pnt
1007 4647 Pnt
1082 4584 Pnt
1157 4521 Pnt
1233 4458 Pnt
1308 4395 Pnt
1383 4332 Pnt
1458 4268 Pnt
1533 4205 Pnt
1608 4142 Pnt
1684 4079 Pnt
1759 4018 Pnt
1834 3958 Pnt
1909 3897 Pnt
1984 3836 Pnt
2060 3775 Pnt
2135 3714 Pnt
2210 3654 Pnt
2285 3593 Pnt
2360 3532 Pnt
2436 3471 Pnt
2511 3418 Pnt
2586 3365 Pnt
2661 3312 Pnt
2736 3259 Pnt
2812 3206 Pnt
2887 3153 Pnt
2962 3100 Pnt
3037 3047 Pnt
3112 2994 Pnt
3187 2941 Pnt
3263 2886 Pnt
3338 2832 Pnt
3413 2778 Pnt
3488 2723 Pnt
3563 2669 Pnt
3639 2614 Pnt
3714 2560 Pnt
3789 2506 Pnt
3864 2451 Pnt
3939 2397 Pnt
4015 2341 Pnt
4090 2284 Pnt
4165 2228 Pnt
4240 2172 Pnt
4315 2116 Pnt
4391 2059 Pnt
4466 2003 Pnt
4541 1947 Pnt
4616 1890 Pnt
4691 1834 Pnt
4766 1783 Pnt
4842 1731 Pnt
4917 1680 Pnt
4992 1628 Pnt
5067 1577 Pnt
5142 1526 Pnt
5218 1474 Pnt
5293 1423 Pnt
5368 1371 Pnt
5443 1320 Pnt
5518 1267 Pnt
5594 1215 Pnt
5669 1162 Pnt
5744 1109 Pnt
5819 1057 Pnt
5894 1004 Pnt
5970 952 Pnt
6045 899 Pnt
6120 846 Pnt
6195 794 Pnt
6270 741 Pnt
6345 689 Pnt
6421 636 Pnt
6496 583 Pnt
6571 531 Pnt
6646 478 Pnt
% End plot #12
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
924 4759 N
924 448 L
6023 0 V
0 4311 V
-6023 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
2255 1469 M
[ [(Helvetica) 260.0 0.0 true true 0 (K=5)]
] -86.7 MCshow
/Helvetica findfont 140 scalefont setfont
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
